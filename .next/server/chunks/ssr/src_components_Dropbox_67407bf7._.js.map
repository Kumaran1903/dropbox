{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/Dropbox/Dropbox.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"btn\": \"Dropbox-module__yByLYW__btn\",\n  \"disabled\": \"Dropbox-module__yByLYW__disabled\",\n  \"dropzone\": \"Dropbox-module__yByLYW__dropzone\",\n  \"message\": \"Dropbox-module__yByLYW__message\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumar/OneDrive/Desktop/dropbox/src/components/Dropbox/Dropbox.js"],"sourcesContent":["\"use client\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport styles from \"./Dropbox.module.css\";\r\n\r\nexport const Dropbox = ({ session }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onDrop = useCallback(\r\n    async (acceptedFiles) => {\r\n      if (acceptedFiles.length === 0 || uploading) return; // Prevent upload if already uploading\r\n      setUploading(true);\r\n      setMessage(\"Uploading...\");\r\n\r\n      const file = acceptedFiles[0];\r\n      const userId = session?.user?.id || session?.user?.email; // Use user ID or email as folder name\r\n\r\n      try {\r\n        // ✅ Request presigned URL from backend API with userId\r\n        const response = await fetch(\"/api/upload-url\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            userId,\r\n            fileName: file.name,\r\n            fileType: file.type,\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to get upload URL: ${await response.text()}`);\r\n        }\r\n\r\n        const { uploadUrl } = await response.json();\r\n\r\n        // ✅ Upload file to AWS S3\r\n        const uploadResponse = await fetch(uploadUrl, {\r\n          method: \"PUT\",\r\n          body: file,\r\n          headers: { \"Content-Type\": file.type },\r\n        });\r\n\r\n        if (uploadResponse.ok) {\r\n          setMessage(\"✅ File uploaded successfully!\");\r\n        } else {\r\n          throw new Error(\"Upload to S3 failed\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Upload Error:\", error);\r\n        setMessage(\"❌ Upload failed. Try again.\");\r\n      } finally {\r\n        setUploading(false);\r\n\r\n        // Hide the message after 2 seconds\r\n        setTimeout(() => {\r\n          setMessage(\"\");\r\n        }, 2000);\r\n      }\r\n    },\r\n    [uploading, session]\r\n  ); // Prevents re-triggering while uploading\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    disabled: uploading, // Prevents further uploads while uploading\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {session?.user ? (\r\n        <>\r\n          <div\r\n            {...getRootProps()}\r\n            className={`${styles.dropzone} ${uploading ? styles.disabled : \"\"}`}\r\n          >\r\n            <input {...getInputProps()} disabled={uploading} />\r\n            <p>\r\n              {uploading\r\n                ? \"Uploading...\"\r\n                : \"Drag & drop a file here, or click to select one\"}\r\n            </p>\r\n          </div>\r\n          {message && <p className={styles.message}>{message}</p>}{\" \"}\r\n          {/* Message disappears after 2 seconds */}\r\n        </>\r\n      ) : (\r\n        <Link className={styles.btn} href={\"/login\"}>\r\n          <span>Sign up for free</span>\r\n          <Image src=\"/right_arrow.png\" height={25} width={25} alt=\"arrow\" />\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;;;;;;;AAOO,MAAM,UAAU,CAAC,EAAE,OAAO,EAAE;IACjC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACvB,OAAO;QACL,IAAI,cAAc,MAAM,KAAK,KAAK,WAAW,QAAQ,sCAAsC;QAC3F,aAAa;QACb,WAAW;QAEX,MAAM,OAAO,aAAa,CAAC,EAAE;QAC7B,MAAM,SAAS,SAAS,MAAM,MAAM,SAAS,MAAM,OAAO,sCAAsC;QAEhG,IAAI;YACF,uDAAuD;YACvD,MAAM,WAAW,MAAM,MAAM,mBAAmB;gBAC9C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,UAAU,KAAK,IAAI;oBACnB,UAAU,KAAK,IAAI;gBACrB;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,MAAM,SAAS,IAAI,IAAI;YACtE;YAEA,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI;YAEzC,0BAA0B;YAC1B,MAAM,iBAAiB,MAAM,MAAM,WAAW;gBAC5C,QAAQ;gBACR,MAAM;gBACN,SAAS;oBAAE,gBAAgB,KAAK,IAAI;gBAAC;YACvC;YAEA,IAAI,eAAe,EAAE,EAAE;gBACrB,WAAW;YACb,OAAO;gBACL,MAAM,IAAI,MAAM;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,WAAW;QACb,SAAU;YACR,aAAa;YAEb,mCAAmC;YACnC,WAAW;gBACT,WAAW;YACb,GAAG;QACL;IACF,GACA;QAAC;QAAW;KAAQ,GACnB,yCAAyC;IAE5C,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,cAAW,AAAD,EAAE;QAClD;QACA,UAAU;QACV,UAAU;IACZ;IAEA,qBACE,8OAAC;kBACE,SAAS,qBACR;;8BACE,8OAAC;oBACE,GAAG,cAAc;oBAClB,WAAW,GAAG,mJAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,mJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,IAAI;;sCAEnE,8OAAC;4BAAO,GAAG,eAAe;4BAAE,UAAU;;;;;;sCACtC,8OAAC;sCACE,YACG,iBACA;;;;;;;;;;;;gBAGP,yBAAW,8OAAC;oBAAE,WAAW,mJAAA,CAAA,UAAM,CAAC,OAAO;8BAAG;;;;;;gBAAc;;yCAI3D,8OAAC,4JAAA,CAAA,UAAI;YAAC,WAAW,mJAAA,CAAA,UAAM,CAAC,GAAG;YAAE,MAAM;;8BACjC,8OAAC;8BAAK;;;;;;8BACN,8OAAC,6HAAA,CAAA,UAAK;oBAAC,KAAI;oBAAmB,QAAQ;oBAAI,OAAO;oBAAI,KAAI;;;;;;;;;;;;;;;;;AAKnE","debugId":null}}]
}