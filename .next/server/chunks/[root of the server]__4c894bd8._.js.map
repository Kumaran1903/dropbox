{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumar/OneDrive/Desktop/dropbox/src/lib/auth.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport Google from \"next-auth/providers/google\";\r\n\r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n  providers: [\r\n    Google({\r\n      clientId: process.env.GOOGLE_CLIENT_ID,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\r\n    }),\r\n  ],\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,WAAW;QACT,CAAA,GAAA,uJAAA,CAAA,UAAM,AAAD,EAAE;YACL,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;AACH","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumar/OneDrive/Desktop/dropbox/src/app/api/get-files/route.js"],"sourcesContent":["import {\r\n  S3Client,\r\n  ListObjectsV2Command,\r\n  GetObjectCommand,\r\n} from \"@aws-sdk/client-s3\";\r\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\r\nimport { auth } from \"@/lib/auth\";\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    const session = await auth();\r\n\r\n    if (!session || !session.user) {\r\n      return Response.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const userId = session.user.id || session.user.email; // Use user-specific folder\r\n\r\n    const s3 = new S3Client({\r\n      region: process.env.AWS_REGION,\r\n      credentials: {\r\n        accessKeyId: process.env.AWS_ACCESS_KEY_ID,\r\n        secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\r\n      },\r\n    });\r\n\r\n    // Get all user files\r\n    const params = {\r\n      Bucket: process.env.AWS_BUCKET_NAME,\r\n      Prefix: `${userId}/`,\r\n    };\r\n\r\n    const { Contents } = await s3.send(new ListObjectsV2Command(params));\r\n\r\n    if (!Contents) {\r\n      return Response.json({ files: [] }, { status: 200 });\r\n    }\r\n\r\n    // Generate pre-signed URLs for secure downloads\r\n    const files = await Promise.all(\r\n      Contents.map(async (file) => {\r\n        const command = new GetObjectCommand({\r\n          Bucket: process.env.AWS_BUCKET_NAME,\r\n          Key: file.Key,\r\n        });\r\n\r\n        const signedUrl = await getSignedUrl(s3, command, { expiresIn: 60 }); // URL valid for 60 sec\r\n\r\n        return {\r\n          key: file.Key,\r\n          name: file.Key.split(\"/\").pop(),\r\n          url: signedUrl, // Secure link\r\n        };\r\n      })\r\n    );\r\n\r\n    return Response.json({ files }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Fetch Files Error:\", error);\r\n    return Response.json({ error: \"Failed to fetch files\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAKA;AAAA;AACA;;;;AAEO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,oHAAA,CAAA,OAAI,AAAD;QAEzB,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAE;YAC7B,OAAO,SAAS,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QAChE;QAEA,MAAM,SAAS,QAAQ,IAAI,CAAC,EAAE,IAAI,QAAQ,IAAI,CAAC,KAAK,EAAE,2BAA2B;QAEjF,MAAM,KAAK,IAAI,iJAAA,CAAA,WAAQ,CAAC;YACtB,QAAQ,QAAQ,GAAG,CAAC,UAAU;YAC9B,aAAa;gBACX,aAAa,QAAQ,GAAG,CAAC,iBAAiB;gBAC1C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB;YACpD;QACF;QAEA,qBAAqB;QACrB,MAAM,SAAS;YACb,QAAQ,QAAQ,GAAG,CAAC,eAAe;YACnC,QAAQ,GAAG,OAAO,CAAC,CAAC;QACtB;QAEA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,iJAAA,CAAA,uBAAoB,CAAC;QAE5D,IAAI,CAAC,UAAU;YACb,OAAO,SAAS,IAAI,CAAC;gBAAE,OAAO,EAAE;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACpD;QAEA,gDAAgD;QAChD,MAAM,QAAQ,MAAM,QAAQ,GAAG,CAC7B,SAAS,GAAG,CAAC,OAAO;YAClB,MAAM,UAAU,IAAI,iJAAA,CAAA,mBAAgB,CAAC;gBACnC,QAAQ,QAAQ,GAAG,CAAC,eAAe;gBACnC,KAAK,KAAK,GAAG;YACf;YAEA,MAAM,YAAY,MAAM,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,IAAI,SAAS;gBAAE,WAAW;YAAG,IAAI,uBAAuB;YAE7F,OAAO;gBACL,KAAK,KAAK,GAAG;gBACb,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG;gBAC7B,KAAK;YACP;QACF;QAGF,OAAO,SAAS,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IAChD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IACzE;AACF","debugId":null}}]
}